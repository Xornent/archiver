<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ui="clr-namespace:Archiver.UI">

    <FontFamily x:Key="fixedWidthFont">
        Cascadia Code, SF Mono, Consolas
    </FontFamily>

    <FontFamily x:Key="windowTitleFont">
        /Fonts/#Roboto
    </FontFamily>

    <FontFamily x:Key="bodyFont">
        /Fonts/#Roboto
    </FontFamily>
    <!-- Colors -->
    
    <Color x:Key="enabledButtonFaceC">
        #ffffff
    </Color>

    <Color x:Key="stressedBorderC">
        #cccccc
    </Color>

    <Color x:Key="enabledTextC">
        #000000
    </Color>

    <Color x:Key="focusC">
        #80da3b01
    </Color>

    <Color x:Key="stressedC">
        #da3b01
    </Color>

    <Color x:Key="stressedHoverC">
        #da3b01
    </Color>

    <Color x:Key="stressedUnfocusC">
        #dcdcdc
    </Color>

    <Color x:Key="stressedTextC">
        #ffffff
    </Color>
    
    <Color x:Key="disabledTextC">
        #cccccc
    </Color>

    <Color x:Key="defaultExpandarC">
        #bbbbbb
    </Color>

    <Color x:Key="hoveredExpanderC">
        #dddddd
    </Color>

    <Color x:Key="pressedExpanderC">
        #aaaaaa
    </Color>

    <!-- Solid Brushes -->
    
    <SolidColorBrush x:Key="enabledButtonFace">
        #ffffff
    </SolidColorBrush>

    <SolidColorBrush x:Key="stressedBorder">
        #cccccc
    </SolidColorBrush>

    <SolidColorBrush x:Key="enabledText">
        #000000
    </SolidColorBrush>

    <SolidColorBrush x:Key="focus">
        <!--#80055bf8-->
        #80da3b01
    </SolidColorBrush>

    <SolidColorBrush x:Key="stressed">
        <!--#0a6dff-->
        #da3b01
    </SolidColorBrush>

    <SolidColorBrush x:Key="stressedHover">
        <!--#095dff-->
        #da3b01
    </SolidColorBrush>

    <SolidColorBrush x:Key="stressedUnfocus">
        #dcdcdc
    </SolidColorBrush>

    <SolidColorBrush x:Key="stressedText">
        #ffffff
    </SolidColorBrush>

    <SolidColorBrush x:Key="disabledText">
        Gray
    </SolidColorBrush>

    <SolidColorBrush x:Key="menuSeparator">
        #dddddd
    </SolidColorBrush>

    <SolidColorBrush x:Key="menuArrow">
        #cccccc
    </SolidColorBrush>

    <SolidColorBrush x:Key="defaultExpandar">
        #bbbbbb
    </SolidColorBrush>

    <SolidColorBrush x:Key="hoveredExpander">
        #dddddd
    </SolidColorBrush>

    <SolidColorBrush x:Key="pressedExpander">
        #aaaaaa
    </SolidColorBrush>

    <!-- Global Design Parameters -->

    <CornerRadius x:Key="radiusMedium">4</CornerRadius>
    <CornerRadius x:Key="radiusLarge">6</CornerRadius>
    <CornerRadius x:Key="radiusSmall">3</CornerRadius>
    <CornerRadius x:Key="radiusRadioLarge">10</CornerRadius>
    <CornerRadius x:Key="radiusRadioMedium">8</CornerRadius>
    <Thickness x:Key="focusThickness">3</Thickness>
    <Thickness x:Key="contentPresenterMargin">14 0 0 0</Thickness>

    <DropShadowEffect x:Key="dropShadow" Color="Black" BlurRadius="2" 
                      ShadowDepth="0.5" Direction="-90" Opacity="0.3"/>

    <DropShadowEffect x:Key="dropShadowCondensed" Color="Black" BlurRadius="1" 
                      ShadowDepth="0.5" Direction="-90" Opacity="0.4"/>

    <DropShadowEffect x:Key="dropShadowPopup" Color="Black"
                      ShadowDepth="2" BlurRadius="20" Opacity="0.2"/>

    <!-- Buttons -->

    <Style TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource enabledText}"/>
        <Setter Property="Background" Value="{StaticResource enabledButtonFace}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BorderFocus" BorderThickness="0" Margin="{StaticResource focusThickness}" CornerRadius="{StaticResource radiusMedium}" 
                            BorderBrush="{StaticResource focus}">
                        <Border Name="Border"
                                BorderThickness="0.8" CornerRadius="{StaticResource radiusMedium}" 
                                BorderBrush="{StaticResource stressedBorder}" 
                                Background="{StaticResource enabledButtonFace}" 
                                TextElement.Foreground="{StaticResource enabledText}"
                                Effect="{StaticResource dropShadow}">
                            <Grid Margin="2">
                                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  UseLayoutRounding="True" SnapsToDevicePixels="True">
                                </ContentPresenter>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation From="0" To="{StaticResource focusThickness}" Duration="0:0:0.1" 
                                                     Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.BorderThickness)"/>
                                    <ThicknessAnimation From="{StaticResource focusThickness}" To="0" Duration="0:0:0.1" 
                                                     Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.Margin)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusLarge}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation From="{StaticResource focusThickness}" To="0" Duration="0:0:0.1" 
                                                     Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.BorderThickness)"/>
                                    <ThicknessAnimation From="0" To="{StaticResource focusThickness}" Duration="0:0:0.1" 
                                                     Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.Margin)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusMedium}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource stressedC}" To="{StaticResource enabledButtonFaceC}"
                                                        Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource stressed}"></Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource stressed}"></Setter>
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource stressedText}"/>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="LightGray" To="{StaticResource enabledButtonFaceC}"
                                                        Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <ColorAnimation From="{StaticResource disabledTextC}" To="{StaticResource enabledTextC}"
                                                        Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Border" Property="Background" Value="LightGray"></Setter>
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource disabledText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}"
       TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Border x:Name="BorderFocus" BorderThickness="{StaticResource focusThickness}" Margin="0" CornerRadius="{StaticResource radiusSmall}" 
                                    BorderBrush="Transparent" Cursor="Hand">
                                <Border x:Name="Border" Width="14" Height="14" CornerRadius="{StaticResource radiusSmall}" 
                                    BorderThickness="1" BorderBrush="{StaticResource stressed}"
                                    Background="{StaticResource enabledButtonFace}"
                                    Effect="{StaticResource dropShadow}">
                                    <Grid>
                                        <Path Visibility="Collapsed" Width="14" Height="14" x:Name="CheckMark"
                                              SnapsToDevicePixels="False" StrokeThickness="2" Opacity="0"
                                              StrokeStartLineCap="Round" StrokeLineJoin="Round" StrokeEndLineCap="Round"
                                              Data="M 2.5 7 L 5.5 10 L 10 3" Stroke="{StaticResource enabledButtonFace}"
                                              Effect="{StaticResource dropShadowCondensed}">
                                        </Path>
                                        <Path Visibility="Collapsed" Width="14" Height="14" x:Name="InderminateMark"
                                              SnapsToDevicePixels="False" StrokeThickness="2" Data="M 1 5 L 9 5" Opacity="0"
                                              StrokeStartLineCap="Round" StrokeLineJoin="Round" StrokeEndLineCap="Round"
                                              Stroke="{StaticResource enabledButtonFace}">
                                        </Path>
                                    </Grid>
                                </Border>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="ContentPre" Margin="6,0,0,0" VerticalAlignment="Center" 
                                          HorizontalAlignment="Stretch" 
                                          RecognizesAccessKey="True" />
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource enabledButtonFaceC}" To="{StaticResource stressedC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="0" To="1"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource stressedBorderC}" To="{StaticResource enabledButtonFaceC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="1" To="0"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource enabledButtonFaceC}" To="{StaticResource stressedC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="0" To="1"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="InderminateMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="Transparent" To="{StaticResource focusC}" Duration="0:0:0.1" 
                                                    Storyboard.TargetName="BorderFocus"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusMedium}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="{StaticResource focusC}" To="Transparent" Duration="0:0:0.1" 
                                                    Storyboard.TargetName="BorderFocus"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusSmall}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Border x:Name="BorderFocus" BorderThickness="{StaticResource focusThickness}" Margin="0" CornerRadius="{StaticResource radiusRadioMedium}" 
                                    BorderBrush="Transparent" Cursor="Hand">
                                <Border x:Name="Border" Width="16" Height="16" CornerRadius="{StaticResource radiusRadioMedium}" 
                                    BorderThickness="1" BorderBrush="{StaticResource stressed}"
                                    Background="{StaticResource enabledButtonFace}"
                                    Effect="{StaticResource dropShadow}">
                                    <Grid>
                                        <Path Visibility="Collapsed" Width="16" Height="16" x:Name="CheckMark"
                                              SnapsToDevicePixels="False" StrokeThickness="7" Opacity="0"
                                              StrokeStartLineCap="Round" StrokeLineJoin="Round" StrokeEndLineCap="Round"
                                              Data="M 7 7 L 7 7" Stroke="{StaticResource enabledButtonFace}"
                                              Effect="{StaticResource dropShadowCondensed}">
                                        </Path>
                                        <Path Visibility="Collapsed" Width="16" Height="16" x:Name="InderminateMark"
                                              SnapsToDevicePixels="False" StrokeThickness="2" Data="M 1 5 L 9 5" Opacity="0"
                                              StrokeStartLineCap="Round" StrokeLineJoin="Round" StrokeEndLineCap="Round"
                                              Stroke="{StaticResource enabledButtonFace}">
                                        </Path>
                                    </Grid>
                                </Border>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="ContentPre" Margin="6,0,0,0" VerticalAlignment="Center" 
                                          HorizontalAlignment="Stretch" 
                                          RecognizesAccessKey="True" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource enabledButtonFaceC}" To="{StaticResource stressedC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="0" To="1"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource stressedBorderC}" To="{StaticResource enabledButtonFaceC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="1" To="0"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource enabledButtonFaceC}" To="{StaticResource stressedC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                        <DoubleAnimation From="0" To="1"
                                                         Duration="0:0:0.1"
                                                         Storyboard.TargetName="InderminateMark"
                                                         Storyboard.TargetProperty="(Path.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="Transparent" To="{StaticResource focusC}" Duration="0:0:0.1" 
                                                    Storyboard.TargetName="BorderFocus"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusRadioLarge}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="{StaticResource focusC}" To="Transparent" Duration="0:0:0.1" 
                                                    Storyboard.TargetName="BorderFocus"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocus"
                                                     Storyboard.TargetProperty="(Border.CornerRadius)">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{StaticResource radiusMedium}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="1">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" Margin="4"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource menuSeparator}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Background="Transparent" BorderBrush="Transparent" 
                                      Grid.Row="0" Grid.Column="0" 
                                      Command="{x:Static ScrollBar.LineUpCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False">

                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" 
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                             Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                             Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                             Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                                             Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource enabledText}"
                                  Data="M 0 3.5 L 3.5 0 L 7 3.5 Z" />

                        </RepeatButton>
                        <RepeatButton Background="Transparent" BorderBrush="Transparent"
                                      Grid.Row="2" Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False">

                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource enabledText}"
                                  Data="M 0 0 L 7 0 L 3.5 3.5 Z" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" CornerRadius="4" Padding="4 0 4 0">
            <Grid x:Name="placer">
                <ContentPresenter Margin="6,2.5,6,0" UseLayoutRounding="True" ContentSource="Header" 
                                  RecognizesAccessKey="True"/>
                <Popup x:Name="Popup" SnapsToDevicePixels="True" UseLayoutRounding="True"
                       Placement="Bottom" HorizontalOffset="-4" VerticalOffset="0" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">

                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1"
                            Background="White" BorderBrush="{StaticResource menuArrow}" CornerRadius="8" 
                            Margin="20" Effect="{StaticResource dropShadowPopup}">
                        <Grid Margin="0 5 0 5">
                            <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Grid>
                    </Border>

                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" TargetName="Border" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" Value="{StaticResource stressedText}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="8 8 8 8" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource disabledText}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" CornerRadius="4" Padding="4 0 4 0">
            <Grid>
                <ContentPresenter Margin="6,2.5,6,0"
                        ContentSource="Header"
                        RecognizesAccessKey="True" UseLayoutRounding="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" Value="{StaticResource stressedText}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource disabledText}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Margin="4 0 4 0" Padding="5 2 5 2" CornerRadius="4">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Check" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                </Grid.ColumnDefinitions>
                
                <Border x:Name="Check" Width="16" Height="16" Visibility="Hidden" Margin="3,0,0,0"
                        BorderThickness="0" BorderBrush="Transparent" Background="Transparent">
                    <Path x:Name="CheckMark" Width="16" Height="16"
                          Visibility="Collapsed" SnapsToDevicePixels="False" StrokeThickness="2"
                          Data="M 3 9 L 6.6 13 L 13 3" Stroke="{StaticResource stressed}">
                    </Path>
                </Border>
               
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" 
                                  TextElement.FontWeight="Regular" UseLayoutRounding="True" 
                                  RecognizesAccessKey="True" Margin="6 0 0 0"
                                  VerticalAlignment="Center"/>
                
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                           Margin="16 0 8 0" DockPanel.Dock="Right" Foreground="{StaticResource disabledText}"
                           TextAlignment="Center" FontSize="12" VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" Value="{StaticResource stressedText}"/>
                <Setter Property="Stroke" TargetName="CheckMark" Value="{StaticResource stressedText}"/>
                <Setter Property="Foreground" TargetName="InputGestureText" Value="{StaticResource stressedText}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource menuSeparator}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Foreground" Value="{StaticResource enabledText}"/>
                <Setter Property="Stroke" TargetName="CheckMark" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" TargetName="InputGestureText" Value="{StaticResource disabledText}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource disabledText}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Margin="4 0 4 0" Padding="5 2 5 2" CornerRadius="4">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Check" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                
                <Border x:Name="Check" Width="16" Height="16" Visibility="Hidden" Margin="3,0,0,0"
                        BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                    <Path x:Name="CheckMark" Width="16" Height="16"
                          Visibility="Collapsed" SnapsToDevicePixels="False" StrokeThickness="2"
                          Data="M 3 9 L 6.6 13 L 13 3" Stroke="{StaticResource stressed}">
                    </Path>
                </Border>
                
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" 
                                  TextElement.FontWeight="Regular" UseLayoutRounding="True"
                                  RecognizesAccessKey="True" Margin="6 0 0 0"
                                  VerticalAlignment="Center"/>
                
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                           Margin="16,0,8,0" DockPanel.Dock="Right" Foreground="{StaticResource disabledText}"
                           TextAlignment="Center" FontSize="12" VerticalAlignment="Center"/>
                
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" 
                      Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource menuArrow}">
                </Path>
                
                <Popup x:Name="Popup" SnapsToDevicePixels="True" UseLayoutRounding="True"
                       Placement="Right" HorizontalOffset="4" VerticalOffset="-8" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True"
                       Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1"
                            Background="White" BorderBrush="{StaticResource menuArrow}" 
                            CornerRadius="8" Margin="20" 
                            Effect="{StaticResource dropShadowPopup}">
                        <Grid Margin="0 1.5 0 3">
                            <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" Value="{StaticResource stressedText}"/>
                <Setter Property="Stroke" TargetName="CheckMark" Value="{StaticResource stressedText}"/>
                <Setter Property="Foreground" TargetName="InputGestureText" Value="{StaticResource stressedText}"/>
                <Setter Property="BorderBrush" Value="{StaticResource menuSeparator}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Foreground" Value="{StaticResource enabledText}"/>
                <Setter Property="Stroke" TargetName="CheckMark" Value="{StaticResource stressed}"/>
                <Setter Property="Foreground" TargetName="InputGestureText" Value="{StaticResource disabledText}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="8"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource disabledText}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

        <Grid Margin="{StaticResource focusThickness}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="Border" Duration="0:0:0.1"
                                            From="{StaticResource stressedC}" To="{StaticResource stressedHoverC}">
                            </ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" BorderThickness="0" 
                    BorderBrush="{StaticResource menuArrow}"
                    Background="{StaticResource stressed}" Effect="{StaticResource dropShadow}">
            </Border>
            <Border Grid.Column="0" CornerRadius="3 0 0 3" Margin="0" BorderThickness="1 1 0 1"
                    BorderBrush="{StaticResource menuArrow}">
                <Border.Background>
                    <SolidColorBrush Color="White"/>
                </Border.Background>
            </Border>
            <Path x:Name="ArrowDown" Grid.Column="1" Width="16" Height="16" Margin="0 1 0 0"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 5 10 L 8 13 L 11 10 L 8 13 Z" 
                  Stroke="White" StrokeThickness="2.5" StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round"
                  StrokeLineJoin="Round" Effect="{StaticResource dropShadowCondensed}">
            </Path>
            <Path x:Name="ArrowUp" Grid.Column="1" Width="16" Height="16" Margin="0 1 0 0"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 5 5 L 8 2 L 11 5 L 8 2 Z" 
                  Stroke="White" StrokeThickness="2.5" StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round"
                  StrokeLineJoin="Round" Effect="{StaticResource dropShadowCondensed}">
            </Path>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Popup x:Name="Popup" SnapsToDevicePixels="True" UseLayoutRounding="True"
                                   Placement="Bottom" HorizontalOffset="-4" VerticalOffset="0" IsOpen="{TemplateBinding IsOpen}"
                                   AllowsTransparency="True" Focusable="True" PopupAnimation="Fade">

                        <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1"
                                        Background="White" BorderBrush="{StaticResource menuArrow}" CornerRadius="8" 
                                        Margin="20" Effect="{StaticResource dropShadowPopup}">
                            <Grid Margin="0 5 0 5">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>
                        </Border>

                    </Popup>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="8 8 8 8" />
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="29" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="Focus" BorderThickness="{StaticResource focusThickness}" 
                                BorderBrush="Transparent" CornerRadius="{StaticResource radiusLarge}"/>
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" 
                                                                      Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource disabledTextC}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          TextElement.FontSize="13"
                                          Margin="9 6 28 6" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                 Margin="9 6 28 6" Focusable="True" Background="Transparent"
                                 Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup" Placement="Center" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  Margin="20">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" Margin="0" Padding="5"
                                        BorderBrush="{StaticResource menuArrow}" Background="White"
                                        Effect="{StaticResource dropShadowPopup}" CornerRadius="8">
                                    </Border>
                                    <ScrollViewer Margin="6 7 6 7" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent" To="{StaticResource focusC}"
                                                        Duration="0:0:0.1" 
                                                        Storyboard.TargetName="Focus"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource focusC}" To="Transparent"
                                                        Duration="0:0:0.1" 
                                                        Storyboard.TargetName="Focus"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="5 3 5 3" SnapsToDevicePixels="true" 
                            Background="Transparent" TextElement.FontSize="13" TextElement.Foreground="Black"
                            CornerRadius="3">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedC}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedTextC}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedC}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Highlight" CornerRadius="{StaticResource radiusMedium}"
                            BorderThickness="{StaticResource focusThickness}" BorderBrush="Transparent">
                        <Border Name="Border" CornerRadius="{StaticResource radiusSmall}" Padding="2" 
                                BorderThickness="1" Background="White" BorderBrush="{StaticResource menuArrow}"
                                Effect="{StaticResource dropShadow}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="LightGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="Gray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent" To="{StaticResource focusC}"
                                                        Storyboard.TargetName="Highlight"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource focusC}" To="Transparent"
                                                        Storyboard.TargetName="Highlight"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Margin="4 0 4 0" x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent"
                            CornerRadius="{StaticResource radiusMedium}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedC}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedTextC}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedUnfocusC}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource enabledTextC}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <GridViewRowPresenter VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#f4f5f5" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border x:Name="HighlightBorder" BorderBrush="Transparent" 
                            BorderThickness="{StaticResource focusThickness}" 
                            CornerRadius="{StaticResource radiusMedium}" HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right"
                                   Margin="0,0,-9,0" />
                            <ContentPresenter Margin="7 1 3 1" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent" To="{StaticResource focusC}"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="HighlightBorder"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="{StaticResource focusC}" To="Transparent"
                                                        Duration="0:0:0.1"
                                                        Storyboard.TargetName="HighlightBorder"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="#f0f0f0"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{StaticResource focus}"/>
                            <Setter Property="Background" Value="#f0f0f0"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="White" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource stressedBorderC}" />
                        </Border.BorderBrush>
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource stressedBorderC}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="10" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#e0e0e0"  Offset="0.0" />
                            <GradientStop Color="#e0e0e0" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                     Width="1"
                     Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                    <GradientStop Color="#e0e0e0" Offset="0" />
                    <GradientStop Color="#e0e0e0" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Path Name="Path" Width="12" Height="12" Data="M 0 0 L 12 6 L 0 12 Z" Fill="{StaticResource defaultExpandar}"
              Stroke="Transparent">
            <Path.RenderTransform>
                <RotateTransform x:Name="Rotation" CenterX="6" CenterY="6" Angle="0"/>
            </Path.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Path"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            From="{StaticResource defaultExpandarC}"
                                            To="{StaticResource hoveredExpanderC}"
                                            Duration="0:0:0.1">
                            </ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Path"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            From="{StaticResource hoveredExpanderC}"
                                            To="{StaticResource pressedExpanderC}"
                                            Duration="0:0:0.1">
                            </ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Path"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            From="{StaticResource defaultExpandarC}"
                                            To="{StaticResource disabledTextC}"
                                            Duration="0:0:0.1">
                            </ColorAnimation>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Rotation"
                                             Storyboard.TargetProperty="(RotateTransform.Angle)"
                                             From="0"
                                             To="90"
                                             Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Rotation"
                                             Storyboard.TargetProperty="(RotateTransform.Angle)"
                                             From="90"
                                             To="0"
                                             Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Path>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Grid.Row="0" BorderBrush="Transparent"
                                BorderThickness="{StaticResource focusThickness}"
                                CornerRadius="{StaticResource radiusMedium}" Padding="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton OverridesDefaultStyle="True" 
                                              Template="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                              FocusVisualStyle="{x:Null}"
                                              Focusable="False">
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1"
                                                  Margin="4"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border x:Name="Content" Grid.Row="1" BorderThickness="1" BorderBrush="#eeeeee"
                                Background="White"
                                CornerRadius="{StaticResource radiusMedium}">
                            <ContentPresenter Margin="4 4 4 14" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height"
                                    Value="{Binding Height, ElementName=Content}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        From="Transparent" To="{StaticResource focusC}"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        From="{StaticResource focusC}" To="Transparent"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Background="#646465" CornerRadius="6"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="scrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,1,1,6"/>
        <Setter Property="Width"  Value="8"/>
        <Setter Property="MinWidth"  Value="5"/>
        <Setter Property="Opacity"   Value="0.2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <RepeatButton  Grid.Row="0" Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                        <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background"  Value="Transparent"/>
                <Setter Property="Margin" Value="1,0,6,1"/>
                <Setter Property="Height"   Value="8"/>
                <Setter Property="MinHeight" Value="5"/>
                <Setter Property="Width"    Value="Auto"/>
                <Setter Property="Opacity" Value="0.2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="scrollViewerBar" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       HorizontalAlignment="Right"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Style="{StaticResource scrollBar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Style="{StaticResource scrollBar}"
                                       VerticalAlignment="Bottom"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.3"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.3"
                                        BeginTime="0:0:0.3"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.3"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.3"
                                        BeginTime="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" BasedOn="{StaticResource scrollViewerBar}"/>
    <Style TargetType="ScrollBar" BasedOn="{StaticResource scrollBar}"/>

    <Style x:Key="{x:Type TreeView}"
       TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border" CornerRadius="{StaticResource radiusMedium}" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource stressedBorderC}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="White" />
                        </Border.Background>
                        <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Margin="1,1,1,1" Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource enabledTextC}" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded" HorizontalAlignment="Left" 
                              VerticalAlignment="Center" Margin="1,1,1,1" 
                              Data="M 0 4 L 8 4 L 4 8 Z" Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource enabledTextC}" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5"
                                   Stroke="Black" StrokeDashArray="1 2" Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}"
       TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource {StaticResource enabledText}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedC}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="PART_Header"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource stressedUnfocusC}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="PART_Header"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource enabledTextC}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                                      ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="5 2.5 5 2.5" CornerRadius="{StaticResource radiusMedium}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1"
                                        Grid.ColumnSpan="2" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>